#!/bin/sh

### BEGIN INIT INFO
# Provides:          tomcat6-<%= @name %>
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Tomcat.
# Description:       Start the Tomcat servlet engine.
### END INIT INFO

set -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME="<%= @name %>"
DESC="Tomcat instance"
JVM_TMP=/tmp/tomcat6-tmp-<%= @name %>
SUDO=`which sudo`

if [ ! -x $SUDO ]; then
  echo "Sudo must be installed"
  exit 1
fi

if [ `id -u` -ne 0 ]; then
  echo "You need root privileges to run this script"
  exit 1
fi

TO_BE_SOURCED=""

# Make sure tomcat is started with system locale
if [ -r /etc/default/locale ]; then
  TO_BE_SOURCED="$TO_BE_SOURCED source \"/etc/default/locale\";"
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
  TO_BE_SOURCED="$TO_BE_SOURCED source \"/etc/default/rcS\";"
fi


# The following variables can be overwritten in $DEFAULT

# Run Tomcat 6 as this user ID
TOMCAT6_USER=<%= @user %>

if [ -z "${JAVA_HOME}" ]; then
  JAVA=`readlink /etc/alternatives/java`
  JAVA_BIN_DIR=`dirname $JAVA`
  JAVA_HOME=`cd $JAVA_BIN_DIR/.. && pwd`
fi
export JAVA_HOME

# Directory where the Tomcat 6 binary distribution resides
CATALINA_HOME=<%= @catalina_home %>

# Directory for per-instance configuration files and webapps
CATALINA_BASE=<%= @catalina_base %>

# check if tomcat already configured
if [ ! -f $CATALINA_BASE/conf/server.xml ]; then
  exit 0
fi

# Use the Java security manager? (yes/no)
TOMCAT6_SECURITY=no

# Default Java options
# Set java.awt.headless=true if JAVA_OPTS is not set so the
# Xalan XSL transformer can work without X11 display on JDK 1.4+
# It also looks like the default heap size of 64M is not enough for most cases
# so the maximum heap size is set to 128M
if [ -z "$JAVA_OPTS" ]; then
  JAVA_OPTS="-Djava.awt.headless=true -Xmx128M"
fi

# End of variables that can be overwritten in $DEFAULT

# overwrite settings from default file
if [ -f "$CATALINA_BASE/conf/env" ]; then
  TO_BE_SOURCED="$TO_BE_SOURCED source \"$CATALINA_BASE/conf/env\";"
  . "$CATALINA_BASE/conf/env"
fi

if [ ! -f "$CATALINA_HOME/bin/bootstrap.jar" ]; then
  log_failure_msg "$NAME is not installed"
  exit 1
fi

if [ -z "$CATALINA_TMPDIR" ]; then
  CATALINA_TMPDIR="$JVM_TMP"
fi

# Set the JSP compiler if set in the tomcat6.default file
if [ -n "$JSP_COMPILER" ]; then
  JAVA_OPTS="$JAVA_OPTS -Dbuild.compiler=\"$JSP_COMPILER\""
fi

SECURITY=""
if [ "$TOMCAT6_SECURITY" = "yes" ]; then
  SECURITY="-security"
fi

# Define other required variables
CATALINA_PID="/var/run/$NAME.pid"
CATALINA_SH="$CATALINA_HOME/bin/catalina.sh"

# Look for Java Secure Sockets Extension (JSSE) JARs
if [ -z "${JSSE_HOME}" -a -r "${JAVA_HOME}/jre/lib/jsse.jar" ]; then
    JSSE_HOME="${JAVA_HOME}/jre/"
fi

catalina_sh() {
  # Escape any double quotes in the value of JAVA_OPTS
  JAVA_OPTS="$(echo $JAVA_OPTS | sed 's/\"/\\\"/g')"

  # Define the command to run Tomcat's catalina.sh as a daemon
  # set -a tells sh to export assigned variables to spawned shells.
  TOMCAT_SH="set -a; JAVA_HOME=\"$JAVA_HOME\"; $TO_BE_SOURCED source \"$DEFAULT\"; \
    CATALINA_HOME=\"$CATALINA_HOME\"; \
    CATALINA_BASE=\"$CATALINA_BASE\"; \
    JAVA_OPTS=\"$JAVA_OPTS\"; \
    CATALINA_PID=\"$CATALINA_PID\"; \
    CATALINA_TMPDIR=\"$CATALINA_TMPDIR\"; \
    JSSE_HOME=\"$JSSE_HOME\"; \
    LD_LIBRARY_PATH="$CATALINA_HOME/lib:$LD_LIBRARY_PATH"; \
    cd \"$CATALINA_BASE\"; \
    \"$CATALINA_SH\" $@"

  # Run the catalina.sh script as a daemon
  set +e
  touch "$CATALINA_PID" "$CATALINA_BASE"/logs/catalina.out
  chown $TOMCAT6_USER "$CATALINA_PID" "$CATALINA_BASE"/logs/catalina.out
  start-stop-daemon --start -b -u "$TOMCAT6_USER"  -d "$CATALINA_TMPDIR" \
    -p "$CATALINA_PID" -x $SUDO -- \
    -u "$TOMCAT6_USER" -H /bin/bash -c "$TOMCAT_SH"
  status="$?"
  set +a -e
  return $status
}

case "$1" in
  start)
  if [ -z "$JAVA_HOME" ]; then
    log_failure_msg "no JDK found - please set JAVA_HOME"
    exit 1
  fi

  if [ ! -d "$CATALINA_BASE/conf" ]; then
    log_failure_msg "invalid CATALINA_BASE: $CATALINA_BASE"
    exit 1
  fi

  log_daemon_msg "Starting $DESC" "$NAME"
  if start-stop-daemon --test --start --pidfile "$CATALINA_PID" \
    --user $TOMCAT6_USER --exec "$JAVA_HOME/bin/java" \
    >/dev/null; then

    # Remove / recreate JVM_TMP directory
    rm -rf "$JVM_TMP"
    mkdir -p "$JVM_TMP" || {
      log_failure_msg "could not create JVM temporary directory"
      exit 1
    }
    chown $TOMCAT6_USER "$JVM_TMP"

    catalina_sh start $SECURITY
    sleep 5
          if start-stop-daemon --test --start --pidfile "$CATALINA_PID" \
      --user $TOMCAT6_USER --exec "$JAVA_HOME/bin/java" \
      >/dev/null; then
      if [ -f "$CATALINA_PID" ]; then
        rm -f "$CATALINA_PID"
      fi
      log_end_msg 1
    else
      log_end_msg 0
    fi
  else
          log_progress_msg "(already running)"
    log_end_msg 0
  fi
  ;;
  stop)
  log_daemon_msg "Stopping $DESC" "$NAME"

  set +e
  if [ -f "$CATALINA_PID" ]; then 
    start-stop-daemon --stop --pidfile "$CATALINA_PID" \
      --user "$TOMCAT6_USER" \
      --retry=TERM/20/KILL/5 >/dev/null
    if [ $? -eq 1 ]; then
      log_progress_msg "$DESC is not running but pid file exists, cleaning up"
    elif [ $? -eq 3 ]; then
      PID="`cat $CATALINA_PID`"
      log_failure_msg "Failed to stop $NAME (pid $PID)"
      exit 1
    fi
    rm -f "$CATALINA_PID"
    rm -rf "$JVM_TMP"
  else
    log_progress_msg "(not running)"
  fi
  log_end_msg 0
  set -e
  ;;
   status)
  set +e
  start-stop-daemon --test --start --pidfile "$CATALINA_PID" \
    --user $TOMCAT6_USER --exec "$JAVA_HOME/bin/java" \
    >/dev/null 2>&1
  if [ "$?" = "0" ]; then

    if [ -f "$CATALINA_PID" ]; then
        log_success_msg "$DESC is not running, but pid file exists."
      exit 1
    else
        log_success_msg "$DESC is not running."
      exit 3
    fi
  else
    log_success_msg "$DESC is running with pid `cat $CATALINA_PID`"
  fi
  set -e
        ;;
  restart|force-reload)
  if [ -f "$CATALINA_PID" ]; then
    $0 stop
    sleep 1
  fi
  $0 start
  ;;
  try-restart)
        if start-stop-daemon --test --start --pidfile "$CATALINA_PID" \
    --user $TOMCAT6_USER --exec "$JAVA_HOME/bin/java" \
    >/dev/null; then
    $0 start
  fi
        ;;
  *)
  log_success_msg "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
  exit 1
  ;;
esac

exit 0